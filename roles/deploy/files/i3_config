# i3 config file
#
# Nothing is done to install it, symlink it manually if you want to use it

# Dependencies :
# - rofi
# - feh
# - xnumlockx
# - scrot (for screenshots)

# The following line is _actually_ parsed by i3 to indicate the file format version
# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

# Notes on usage :
# For NetworkManager configuration, use :
# - nmtui for most config
# - "Network Connections" (launch from rofi) for WPA2 Enterprise


# Use Win key as modifier
set $mod Mod4

# Define variables corresponding to keyboard letters
# We use keyboard to have a configuration independent from the keyboard layout
# Use `xev` to get the keycode of a key
# All variable names correspond to the qwerty lafayette position

set $q 24
set $w 25
set $e 26
set $r 27

set $u 30
set $i 31
set $o 32
set $p 33

set $a 38
set $s 39
set $d 40
set $f 41
set $g 42
set $h 43
set $j 44
set $k 45
set $l 46
set $★ 47
set $' 48

set $z 52
set $x 53
set $c 54
set $v 55
set $b 56

set $return 36
set $space 65
set $escape 9
set $ctrl CTRL

set $1 10
set $2 11
set $3 12
set $4 13
set $5 14
set $6 15
set $7 16
set $8 17
set $9 18
set $0 19

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Add shortcuts to temporary change the layout
set $mode_keyboard "keyboard layout selection"
mode $mode_keyboard {
    bindcode $j exec --no-startup-id "setxkbmap fr -variant lafayette && numlockx && notify-send -t 2000 'Layout switched to qwerty lafayette'"; mode "default"
    bindcode $k exec --no-startup-id "setxkbmap fr -variant bepo      && numlockx && notify-send -t 2000 'Layout switched to bepo'";             mode "default"
    bindcode $l exec --no-startup-id "setxkbmap fr                    && numlockx && notify-send -t 2000 'Layout switched to azerty'";           mode "default"
    # back to normal: Enter or Escape
    bindcode $return mode "default"
    bindcode $escape mode "default"
}
bindcode $mod+$b mode $mode_keyboard

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindcode $mod+$return       exec alacritty
bindcode $mod+Shift+$return exec gnome-terminal

# kill focused window
bindcode $mod+Shift+$q kill

# start dmenu (a program launcher)
# bindcode $mod+$d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindcode $mod+$d exec --no-startup-id i3-dmenu-desktop

# Use Rofi instead of dmenu
set $rofi_common -theme /usr/share/rofi/themes/glue_pro_blue.rasi
# Possible modi that might be interesting besides run and drun : ssh, window, combi
bindcode $mod+$d exec --no-startup-id rofi $rofi_common -modi run  -show run
bindcode $mod+$g exec --no-startup-id rofi $rofi_common -modi drun -show drun
bindcode $mod+$z exec --no-startup-id rofimoji --insert-with-clipboard --rofi-args="$rofi_common"

# Take a screenshot
bindcode $mod+$p exec --no-startup-id .globalrc/files/scripts/i3-scrot

# change focus
bindcode $mod+$h focus left
bindcode $mod+$j focus down
bindcode $mod+$k focus up
bindcode $mod+$l focus right

# move focused window
bindcode $mod+Shift+$h move left
bindcode $mod+Shift+$j move down
bindcode $mod+Shift+$k move up
bindcode $mod+Shift+$l move right

# split in horizontal orientation
# h is used by movement keys
bindcode $mod+$c split h

# split in vertical orientation
bindcode $mod+$v split v

# enter fullscreen mode for the focused container
bindcode $mod+$f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindcode $mod+$s layout stacking
bindcode $mod+$w layout tabbed
bindcode $mod+$e layout toggle split

# toggle tiling / floating
bindcode $mod+Shift+$space floating toggle

# change focus between tiling / floating windows
bindcode $mod+$space focus mode_toggle

# focus the parent container
bindcode $mod+$a focus parent

# focus the child container
bindcode $mod+$i focus child

# lock screen
bindcode $mod+$o exec .globalrc/files/scripts/i3-exit lock

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1  "1:web"
set $ws2  "2"
set $ws3  "3"
set $ws4  "4"
set $ws5  "5"
set $ws6  "6"
set $ws7  "7"
set $ws8  "8:music"
set $ws9  "9:chat"
set $ws10 "10:mail"

# switch to workspace
bindcode $mod+$1 workspace $ws1
bindcode $mod+$2 workspace $ws2
bindcode $mod+$3 workspace $ws3
bindcode $mod+$4 workspace $ws4
bindcode $mod+$5 workspace $ws5
bindcode $mod+$6 workspace $ws6
bindcode $mod+$7 workspace $ws7
bindcode $mod+$8 workspace $ws8
bindcode $mod+$9 workspace $ws9
bindcode $mod+$0 workspace $ws10

# move focused container to workspace
bindcode $mod+Shift+$1 move container to workspace $ws1
bindcode $mod+Shift+$2 move container to workspace $ws2
bindcode $mod+Shift+$3 move container to workspace $ws3
bindcode $mod+Shift+$4 move container to workspace $ws4
bindcode $mod+Shift+$5 move container to workspace $ws5
bindcode $mod+Shift+$6 move container to workspace $ws6
bindcode $mod+Shift+$7 move container to workspace $ws7
bindcode $mod+Shift+$8 move container to workspace $ws8
bindcode $mod+Shift+$9 move container to workspace $ws9
bindcode $mod+Shift+$0 move container to workspace $ws10

# Move workspace to another screen
bindcode $ctrl+$mod+$h move workspace to output left
bindcode $ctrl+$mod+$j move workspace to output up
bindcode $ctrl+$mod+$k move workspace to output down
bindcode $ctrl+$mod+$l move workspace to output right

# reload the configuration file -> since restart preserves current layout, not really needed
# bindsym $mod+Shift+X reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindcode $mod+Shift+$r restart
# exit i3 (logs you out of your X session)
bindcode $mod+Shift+$e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
    # These bindings trigger as soon as you enter the resize mode

    # Pressing left  will shrink the window’s width.
    # Pressing right will grow   the window’s width.
    # Pressing up    will shrink the window’s height.
    # Pressing down  will grow   the window’s height.
    bindcode $h resize shrink width  10 px or 10 ppt
    bindcode $j resize grow   height 10 px or 10 ppt
    bindcode $k resize shrink height 10 px or 10 ppt
    bindcode $l resize grow   width  10 px or 10 ppt

    # back to normal: Enter or Escape or $mod+r
    bindcode $return mode "default"
    bindcode $escape mode "default"
    bindcode $mod+$r mode "default"
}
bindcode $mod+$r mode "resize"

# Based on https://faq.i3wm.org/question/239/how-do-i-suspendlockscreen-and-logout.1.html
# The i3-exit script is installed at deploy-time
# TODO: Better way to call i3-exit (templating ? Changing $_PATH ?)
set $mode_system "system"
mode $mode_system {
    # Same position as default shortcut
    bindcode $e exec --no-startup-id .globalrc/files/scripts/i3-exit logout,    mode "default"
    # Right hand default position, with a gradation
    bindcode $j exec --no-startup-id .globalrc/files/scripts/i3-exit lock,      mode "default"
    bindcode $k exec --no-startup-id .globalrc/files/scripts/i3-exit suspend,   mode "default"
    bindcode $l exec --no-startup-id .globalrc/files/scripts/i3-exit hibernate, mode "default"
    bindcode $★ exec --no-startup-id .globalrc/files/scripts/i3-exit shutdown,  mode "default"
    bindcode $' exec --no-startup-id .globalrc/files/scripts/i3-exit reboot,    mode "default"

    # back to normal: Enter or Escape
    bindcode $return mode "default"
    bindcode $escape mode "default"
}
bindcode $mod+$u mode $mode_system

set $mode_xrandr "xrandr"
mode $mode_xrandr {
    # Use `arandr` to generate the configurations locally

    # Desktop mode (multiple screens, disable laptop screen)
    bindcode $i exec --no-startup-id .screenlayout/desktop.sh, mode "default"
    # Laptop mode (only laptop screen)
    bindcode $o exec --no-startup-id .screenlayout/laptop.sh,  mode "default"
    # Dynamic dual-screen through rofi
    bindcode $h exec --no-startup-id ROFI_ARGS="$rofi_common" .globalrc/files/scripts/i3-monitor-layout,  mode "default"
    # Reset everything. Useful if you have currently no display…
    bindcode $l exec --no-startup-id xrandr --auto, mode "default"

    # back to normal: Enter or Escape
    bindcode $return mode "default"
    bindcode $escape mode "default"
}
bindcode $mod+$x mode $mode_xrandr

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
    status_command i3status
}

# Assign windows to specific workspaces (use xprop to find classes)
assign [class="Firefox"]      $ws1

# https://github.com/i3/i3/issues/2060
# assign [class="spotify"] $ws8
for_window [class="Spotify"] move to workspace $ws8

assign [class="discord"]      $ws9
assign [class="quassel"]      $ws9
assign [class="riot"]         $ws9
assign [class="Slack"]        $ws9

assign [class="Thunderbird"]  $ws10


# Assign workspaces to specific outputs (xrandr output names)

# This is for a layout with 2 horizontal screens.
# It is absolutely not portable in the current state
# maybe we can improve it by using marks

# mapping to the actual screen names
set $outputoeft  "DP-2"
set $output_right "HDMI-1"

# assigning each workspace to a screen
workspace $ws1  output $output_left
workspace $ws2  output $output_right
workspace $ws3  output $output_right
workspace $ws4  output $output_right
workspace $ws5  output $output_right
workspace $ws6  output $output_right
workspace $ws7  output $output_right
workspace $ws8  output $output_right
workspace $ws9  output $output_right
workspace $ws10 output $output_right

# Programs to run at startup

# Default screen layout, to configure locally (see xrandr mode above)
# default.sh should be a symlink to one of the modes otherwise accessible
exec --no-startup-id .screenlayout/default.sh

# Enable NumLock by default
# https://github.com/chanfrv/dotfiles/blob/master/config/i3/config
# https://wiki.archlinux.org/index.php/Activating_Numlock_on_Bootup
exec --no-startup-id numlockx

# Start dunst (notification daemon)
# NB : we could also configure dbus to autostart it in
# /usr/share/dbus-1/services/org.freedesktop.Notifications.service
# Not sure why it sometimes work out of the box, and sometimes not (systemd ?)
# We currently use the default config
exec --no-startup-id dunst

# Start redshift
# This reduces the amount of blue light emitted by the screen based
# on the time of the day
# We currently use the default config
exec --no-startup-id redshift

# Wallpaper image
exec_always --no-startup-id feh --randomize --bg-fill Pictures/Wallpapers/*

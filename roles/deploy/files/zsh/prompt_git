#!/bin/zsh

# This file defines functions to get git info in prompt
#
# Based on : http://sebastiancelis.com/2009/11/16/zsh-prompt-git-users/
#
# Seeing how it is used, it could be largely lightened

git_color=%F{yellow}

update_git_vars() {

  unset __CURRENT_GIT_BRANCH
  unset __CURRENT_GIT_BRANCH_STATUS
  unset __CURRENT_GIT_BRANCH_IS_DIRTY
  unset __CURRENT_GIT_REPO_NAME

  local st="$(git status 2>/dev/null)"
  if [[ -n "$st" ]]; then
    local -a arr
    arr=(${(f)st})

    if [[ $arr[1] =~ 'Not currently on any branch.' ]]; then
      __CURRENT_GIT_BRANCH='no-branch'
    else
      __CURRENT_GIT_BRANCH="${arr[1][(w)4]}";
    fi

    if [[ $arr[2] =~ 'Your branch' ]]; then
      if [[ $arr[2] =~ 'ahead' ]]; then
        __CURRENT_GIT_BRANCH_STATUS='ahead'
      elif [[ $arr[2] =~ 'diverged' ]]; then
        __CURRENT_GIT_BRANCH_STATUS='diverged'
      elif [[ $arr[2] =~ 'behind' ]]; then
        __CURRENT_GIT_BRANCH_STATUS='behind'
      else
        __CURRENT_GIT_BRANCH_STATUS='up-to-date'
      fi
    else
      __CURRENT_GIT_BRANCH_STATUS='local'
    fi

    if [[ ! $st =~ 'nothing to commit' ]]; then
      __CURRENT_GIT_BRANCH_IS_DIRTY='1'
    fi

    __CURRENT_GIT_REPO_NAME=$(
      while [ ! -d .git ] && [ $PWD != '/' ]; do
        cd ..
      done
      echo ${PWD##*/}
    )
  fi
}

prompt_git_info() {
  if [ -n "$__CURRENT_GIT_BRANCH" ]; then
    local s="$git_color("
    s+="$__CURRENT_GIT_REPO_NAME/$__CURRENT_GIT_BRANCH%B$git_color"
    case "$__CURRENT_GIT_BRANCH_STATUS" in
      ahead)
      s+="↑"
      ;;
      diverged)
      s+="↕"
      ;;
      behind)
      s+="↓"
      ;;
      local)
      s+="◽"
      ;;
    esac
    if [ -n "$__CURRENT_GIT_BRANCH_IS_DIRTY" ]; then
      s+="⚡"
    fi
    s+="%b$git_color)"
    echo $s
  fi
}

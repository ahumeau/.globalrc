### Package manager ###

- name: Install graphical packages (RedHat)
  dnf:
    name:
      # sway/wayland related
      - sway                  # Tiling window manager
      - swaylock              # trigger wayland lockscreen
      - rofi                  # Program launcher
      - rofimoji              # Emoji picker
      - grim                  # Take a screenshot
      - slurp                 # Select a screen area, to pass to grim
      - wl-clipboard          # Interact with wayland clipboard (includes wl-copy)
      - waybar                # Nice-looking bar
      - fontawesome-fonts     # Font for waybar icons
      - playerctl             # Command currently running player from the CLI / sway keybindings
      - playerctl-libs        # used by the mediaplayer.py script, to display currently playing content
      - xeyes                 # xeyes allows to know easily if a program is running through XWayland or not
      - wtype                 # input text as if typed from the user, wayland equivalent of xdotool
      - dunst                 # Notification daemon (NB : the version in ubuntu is too old to have wayland support)
      - wdisplays             # Graphical tool for monitors setup
      - alacritty             # GPU-based terminal emulator
      - lxpolkit              # polkit daemon

      # Technical tools required for later desktop setup
      - python3-pip

      # graphical theme
      # Looks now already installed
      # - adwaita-qt

      # nmtui is a terminal graphical interface to NetworkManager
      # TODO : Find the equivalent debian and arch packages (seems installed by default on Ubuntu and Manjaro)
      - NetworkManager-tui

  become: true
  when: have_root and ansible_os_family == "RedHat"

- name: Install graphical packages (Archlinux)
  pacman:
    name:
      # sway/wayland related
      - sway
      - swaylock
      - rofi
      - rofimoji
      - grim
      - slurp
      - wl-clipboard
      - waybar
      - otf-font-awesome
      - playerctl
      # - playerctl-libs # TODO
      - xorg-xeyes
      - xorg-xwayland # NB : not installed by default on arch
      - wtype
      - dunst
      - wdisplays
      - lxpolkit

      # alacritty
      - alacritty

      # graphical theme
      # - adwaita-qt #TODO

  become: true
  when: have_root and ansible_os_family == "Archlinux"

- name: Install graphical packages (Debian)
  apt:
    cache_valid_time: 86400 # 1 day
    name:
      # sway/wayland related
      - sway
      - swaylock
      - rofi
      - grim
      - slurp
      - wl-clipboard
      - waybar
      - fonts-font-awesome
      - playerctl
      - gir1.2-playerctl-2.0  # for mediaplayer.py
      - x11-apps              # Contains xeyes
      - wtype
      - dunst                 # NB : the version in ubuntu is too old to have wayland support
      - wdisplays
      - lxpolkit

      # alacritty
      # TODO : there isn't an official deb package for now, only a ppa. See what we can do.

      # graphical theme
      - adwaita-qt

  become: true
  when: have_root and ansible_os_family == "Debian"

### Locale ###

# The entire locale standard is quite brittle and can break stuff in unexpected ways.
# Be careful when changing anything here.
# https://github.com/mpv-player/mpv/commit/1e70e82baa91

# We want to set a locale with the following properties (by order of priority, I guess) :
# * English language
# * UTF-8 encoding
# * YYYY-MM-DD date format
# * 24h hour format
# * Week starts on monday
#
# Ideally, without resorting to building a custom locale, or installing any extra locale
# To this day, en_DK.UTF-8 looks like our best candidate, it only misses the weekday start, which I don't mind that much.
# TODO : See if we can find a better locale ?

# Ways to test a given locale :
# * LANG=en_DK.utf8 locale -k LC_TIME
# * LANG=en_DK.utf8 date

# Various programs respect the date format with various levels
# For example, Thunderbird, in its default config, reads the locale, and displays the date in the follwing formats :
# * en_US.UTF-8 : mm/dd/aa    -> makes sense
# * fr_FR.UTF-8 : dd/mm/aaaa  -> makes sense
# * en_DK.UTF-8 : dd/mm/aaaa  -> This format does not appear anywhere in this locale ...
# bug : https://bugzilla.mozilla.org/show_bug.cgi?id=1707128
# workaround : https://support.mozilla.org/en-US/kb/customize-date-time-formats-thunderbird

# Ways of setting up system locale
# https://docs.fedoraproject.org/en-US/fedora/latest/system-administrators-guide/basic-system-configuration/System_Locale_and_Keyboard_Configuration/
# https://wiki.debian.org/Locale
# https://wiki.archlinux.org/title/Locale#Setting_the_locale
# We currently don't set it as it is very invasive, and I'm worried about weird side effects, see later if it is required anyway.
# When launching sway through gdm, $LANG is overridden for the graphical session anyway.

# Setting up locale via Gnome for GDM to load is surprisingly hard too. The following were tried and could not be made to work :
# * Using ~/.dmrc (apparently only works for GDM 2.x, legacy)
# * Setting $LANG in ~/.config/environment.d/
#
# Using the gnome settings window (gnome-control-center), you can actually configure it. There are 2 parameters in its "Region & Language" section :
# * Language : sets $LANG.
#   I have no idea where this is stored, and found no way to set it programmatically.
#   Gnome propagates this change to the system locale (visible in `localectl status`), but it doesn't work the other way round.
#   I'm lost here, and honestly, if we really need to configure this, ditching GDM altogether might be worth considering.
# * Formats : sets various $LC_* variables.
#   This one corresponds to the org.gnome.system.locale/region gsettings key
#   But setting a value with `gsettings set org.gnome.system.locale region en_DK.UTF-8` does not work either.
#
# I've given up, just change it with gnome-control-center
#
# These changes require at least logging out, but you might as well reboot at every step, honestly.

### Keyboard layouts ###

- name: Install lxml with pip3
  pip:
    name: lxml
    executable: pip3 # Should not be required, but I'd rather make sure
  become: true
  when: have_root | bool

- name: Install lafayette keyboard layout
  script: "{{ remote_directory }}/files/keyboards/lafayette_linux_v0.6.1.py"
  changed_when: false
  become: true
  when: have_root | bool

# Maybe for debian, configuring this through debconf would be cleaner
# However I tried, and it was very annoying :
# * updating the debconf database did not trigger anything
#   * keyboard-configuration/layoutcode
#   * keyboard-configuration/variantcode
# * even manually triggering its reconfiguration with `dpkg-reconfigure keyboard-configuration -f noninteractive`
#   does regenerate initramfs but without changing /etc/default/keyboard
#
# TODO: See if we can use systemd commands for debian too

# - name: Configure XKBLAYOUT in /etc/default/keyboard (Debian)
#   lineinfile:
#     path: /etc/default/keyboard
#     line: 'XKBLAYOUT="{{ keyboard_layout }}"'
#     regexp: 'XKBLAYOUT=".*"'
#   become: true
#   when: (have_root | bool) and ansible_os_family == "Debian"
#   notify: keyboard_config
#
# - name: Configure XKBVARIANT in /etc/default/keyboard (Debian)
#   lineinfile:
#     path: /etc/default/keyboard
#     line: 'XKBVARIANT="{{ keyboard_variant }}"'
#     regexp: 'XKBVARIANT=".*"'
#   become: true
#   when: (have_root | bool) and ansible_os_family == "Debian"
#   notify: keyboard_config

# generic systemd configuration
# * https://docs.fedoraproject.org/en-US/fedora/rawhide/system-administrators-guide/basic-system-configuration/System_Locale_and_Keyboard_Configuration/
# * https://github.com/systemd/systemd/issues/6403 -> bug preventing using lafayette in VC ?

- name: Get previous keyboard layout configuration
  command: "localectl status"
  become: true
  when: have_root | bool
  changed_when: false # This command only reads state
  register: keyboard_layout_before

- name: Configure virtual console layout to vanilla qwerty
  command: "localectl --no-convert set-keymap us"
  become: true
  when: have_root | bool
  changed_when: false # Sadly, we can't detect changes with command return

- name: Configure X keyboard layout to lafayette
  command: "localectl --no-convert set-x11-keymap {{ keyboard_layout }} '' {{ keyboard_variant }}"
  become: true
  when: have_root | bool
  changed_when: false # Sadly, we can't detect changes with command return

- name: Get new keyboard layout configuration
  command: "localectl status"
  become: true
  when: have_root | bool
  changed_when: keyboard_layout_before.stdout != keyboard_layout_after.stdout
  register: keyboard_layout_after
  notify: keyboard_config

### Alacritty ###

- name: Load alacritty config via .config/alacritty.yml
  file:
    state:  link
    follow: false
    src:    "{{ remote_directory }}/files/alacritty.yml"
    dest:   "{{ ansible_user_dir }}/.config/alacritty.yml"

### Graphical environment theming and configuration ###

# See : https://www.reddit.com/r/archlinux/comments/2eo3qq/is_it_possible_to_get_qt_to_properly_use_gtk/
# See : https://wiki.archlinux.org/index.php/Uniform_look_for_Qt_and_GTK_applications#Using_a_GTK.2B_icon_theme_in_Qt_apps
# The solution chosen here for consistent look between Qt and GTK applications is to use a same theme implemented
# in both native formats

# TODO : Candidates for deletion, I don't think I use any software with such old versions
# of GTK or Qt. Kept here for now, just in case.
# Don't forget to delete the corresponding files too
#
# - name: Load GTK2 configuration via .gtkrc-2.0
#   blockinfile:
#     dest:   "{{ ansible_user_dir }}/.gtkrc-2.0"
#     create: true
#     block:  |
#       # Load GTK2 configuration
#       include "{{ remote_directory }}/files/gtkrc-2.0"
# 
# # /!\ This is a destructive operation /!\
# # It does not seem possible to make an include in gtk3 config
# # https://superuser.com/q/1370777/733026
# - name: Load GTK3 configuration via .config/gtk-3.0/settings.ini
#   file:
#     dest:   "{{ ansible_user_dir }}/.config/gtk-3.0/settings.ini"
#     src:    "{{ remote_directory }}/files/gtk-3.0-settings.ini"
#     state:  link
#     force:  true
# 
# # NB : Qt5 theme is loaded through QT_STYLE_OVERRIDE env variable
# - name: Load Qt4 graphical configuration via .config/Trolltech.conf
#   blockinfile:
#     dest:   "{{ ansible_user_dir }}/.config/Trolltech.conf"
#     create: true
#     block:  |
#       # Set Qt4 Theme
#       [Qt]
#       style=Adwaita-Dark

- name: Create ~/.config/environment.d
  file:
    path: "{{ ansible_user_dir }}/.config/environment.d"
    state: directory

- name: Load graphical session environment variables
  file:
    dest:   "{{ ansible_user_dir }}/.config/environment.d/globalrc.conf"
    src:    "{{ remote_directory }}/files/environment"
    state:  link

### sway ###

- name: Create sway config directory
  file:
    state:  directory
    dest:   "{{ ansible_user_dir }}/.config/sway"

- name: Create sway config file
  template:
    src:    "sway_config"
    dest:   "{{ ansible_user_dir }}/.config/sway/config"
  notify: Reload sway config
  tags: sway-config

- name: Install rofimoji
  pip:
    name: git+https://github.com/fdw/rofimoji
  become: true
  when: have_root and ( ansible_os_family == "Debian")

- name: Create systemd user units directory
  file:
    state:  directory
    dest:   "{{ ansible_user_dir }}/.config/systemd/user"

- name: Create ssh-agent unit file
  copy:
    src:    "ssh-agent.service"
    dest:   "{{ ansible_user_dir }}/.config/systemd/user/"

- name: Enable ssh-agent user unit
  systemd:
    name: ssh-agent.service
    enabled:  true
    state:    started
    scope:    user
    daemon_reload: true

- name: Create waybar config directory
  file:
    state:  directory
    dest:   "{{ ansible_user_dir }}/.config/waybar"

- name: Symlink waybar config
  file:
    state:  link
    src:    "{{ remote_directory }}/files/waybar_config"
    dest:   "{{ ansible_user_dir }}/.config/waybar/config"

- name: Download mediaplayer.py script
  get_url:
    url:  "https://raw.githubusercontent.com/Alexays/Waybar/master/resources/custom_modules/mediaplayer.py"
    dest: "{{ remote_directory }}/mediaplayer.py"
    mode: 0700

- name: Create /usr/local/bin/firefox
  copy:
    src:    "firefox"
    dest:   "/usr/local/bin/firefox"
    mode: 0755
  become: true
  when: have_root | bool

  # NB : Removing elements from the list won't remove the corresponding scripts
- name: Install wrapper scripts for electron-based apps
  template:
    src:  "electron_wayland_wrapper.sh"
    dest: "/usr/local/bin/{{ item }}"
    mode: 0755
  become: true
  when: have_root | bool
  loop: "{{ electron_wayland_to_wrap }}"


  # This is a bit of a hack
  #
  # We have several machines in the inventory on which we're supposed to only
  # ever deploy locally. Instead of always having to use --limit, or make some
  # complicated setup with groups, or use different inventories (etc), we start
  # with all of them, and fail it if the hostname doesn't match.
  #
  # It's a bit ugly, but far less error-prone and more convenient than relying on some
  # manual/local configuration
- name: Check ansible_hostname
  debug: "var=ansible_hostname"
  failed_when: true
  when: expected_hostname is defined and expected_hostname != ansible_hostname
  tags: always

- name: Check that we can actually become root
  command: "true"
  become: true
  changed_when: false
  when: have_root | bool

- name: Create main directory
  file:
    path:   "{{ remote_directory }}"
    state:  directory

- name: Synchronize static files
  synchronize:
    src:        .
    dest:       "{{ remote_directory }}/files"
    recursive:  true
    delete:     true
    perms:      true
  tags: always

- name: Create templates directory
  file:
    state:  directory
    dest:   "{{ remote_directory }}/templates"

- name: Process templates going into "templates" directory
  template:
    src:  "{{ item }}"
    dest: "{{ remote_directory }}/templates/{{ item }}"
  tags: always
  with_items:
    - bazshrc.sh
    - inputrc
    - ssh_config
    - sshrc

- name: Create the local_bin directory
  file:
    state: directory
    dest: "{{ remote_directory }}/local_bin"


- name: Setup the loading via .bashrc
  blockinfile:
    dest:   "{{ ansible_user_dir }}/.bashrc"
    create: true
    marker: "# {mark} GLOBALRC ANSIBLE MANAGED BLOCK"
    block:  |
      # Load custom configuration
      . {{ remote_directory }}/files/bashrc

- name: Install packages
  import_tasks:  packages.yml

- name: Set zsh as default shell
  user:
    name:   "{{ ansible_user_id }}"
    shell:  /bin/zsh
  become:   true
  # zsh is the default shell on MacOS (since 10.15)
  when:     have_root | bool and ansible_system != "Darwin"

- name: Install desktop-specific stuff (common)
  import_tasks: desktop_common.yml
  when: (desktop_linux | bool) or ansible_system == "Darwin"
  tags: desktop

- name: Install desktop-specific stuff (linux)
  import_tasks: desktop_linux.yml
  when: desktop_linux | bool
  tags: desktop

- name: Install desktop-specific stuff (Mac)
  import_tasks: desktop_mac.yml
  when: ansible_system == "Darwin"
  tags: desktop

- name: Install zsh configuration
  import_tasks: zsh.yml
  tags: zsh

- name: Install ssh configuration
  import_tasks: ssh.yml
  tags: ssh

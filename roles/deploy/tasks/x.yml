### Fonts ###

- name: Create font directories
  file:
    state:  directory
    dest: '{{ remote_directory }}/{{ item }}'
  loop:
    - font_archives
    - fonts

# TODO : Mention it in README ?
# These fonts are required by :
# - vim-airline
# - vim-devicons
# - vim-nerdtree-syntax-highlight
- name: Download/extract extra fonts
  include_tasks: font.yml
  loop_control:
    loop_var: font_url
  loop:
    - https://github.com/ryanoasis/nerd-fonts/releases/download/v2.0.0/UbuntuMono.zip
  notify: Regenerate font cache

- name: Install fonts (by symlinking)
  file:
    state:  link
    src:    "{{ remote_directory }}/fonts/"
    dest:   "{{ ansible_user_dir }}/.local/share/fonts/globalrc_fonts"

  # This is not strictly necessary, but we prefer changing configuration requiring specific fonts only once they are installed
  # If this ever causes issues with another handler, change it to a conditional task
- meta: flush_handlers

### Alacritty ###

- name: Create alacritty directory
  file:
    state:  directory
    dest: '{{ remote_directory }}/alacritty'

- name: Download alacritty archive
  get_url:
    url:  "https://github.com/jwilm/alacritty/releases/download/binaries/Alacritty-x86_64.tar.gz"
    dest: "{{ remote_directory }}/alacritty/archive.tar.gz"

- name: Extract alacritty archive
  unarchive:
    src:  "{{ remote_directory }}/alacritty/archive.tar.gz"
    dest: "{{ remote_directory }}/alacritty/"
    remote_src: yes

- name: Copy alactritty executable to /usr/local/bin
  copy:
    src:  "{{ remote_directory }}/alacritty/alacritty"
    dest: "/usr/local/bin/alacritty"
    owner: root
    group: root
    mode:  0755
  become: true
  when: have_root

- name: Load alacritty config via .config/alacritty.yml
  file:
    state:  link
    follow: false
    src:    "{{ remote_directory }}/files/alacritty.yml"
    dest:   "{{ ansible_user_dir }}/.config/alacritty.yml"

- name: Install xclip (Debian)
  apt:
    cache_valid_time: 86400 # 1 day
    name:
      - xclip
  become: true
  when: have_root and ansible_os_family == "Debian"

- name: Install xclip (RedHat)
  dnf:
    name:
      - xclip
  become: true
  when: have_root and ansible_os_family == "RedHat"

### Other ###

- name: Load urxvt configuration via .Xresources
  blockinfile:
    dest:   "{{ ansible_user_dir }}/.Xresources"
    create: true
    marker: "! {mark} ANSIBLE MANAGED BLOCK"
    block:  |
      ! Load urxvt configuration
      #include "{{ remote_directory }}/files/urxvt.conf"

- name: Load GTK2 configuration via .gtkrc-2.0
  blockinfile:
    dest:   "{{ ansible_user_dir }}/.gtkrc-2.0"
    create: true
    block:  |
      # Load GTK2 configuration
      include "{{ remote_directory }}/files/gtkrc-2.0"

- name: Load GTK3 configuration via .config/gtk-3.0/settings.ini
  blockinfile:
    dest:   "{{ ansible_user_dir }}/.config/gtk-3.0/settings.ini"
    create: true
    block:  |
      # Load GTK3 configuration
      [Settings]
      include={{ remote_directory }}/files/gtk-3.0-settings.ini

- name: Create i3 config directory
  file:
    state:  directory
    dest:   "{{ ansible_user_dir }}/.config/i3"

- name: Install i3 config (by symlinking)
  file:
    state:  link
    follow: false
    src:    "{{ remote_directory }}/files/i3_config"
    dest:   "{{ ansible_user_dir }}/.config/i3/config"

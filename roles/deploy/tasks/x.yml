### Keyboard layouts ###

- name: Install lxml with pip3
  pip:
    name: lxml
    executable: pip3 # Should not be required, but I'd rather make sure
  become: true
  when: have_root | bool

- name: Install lafayette keyboard layout
  script: "{{ remote_directory }}/files/keyboards/lafayette_linux_v0.6.1.py"
  changed_when: false
  become: true
  when: have_root | bool

### Fonts ###

- name: Create font-related directories
  file:
    state:  directory
    dest:   "{{ item }}"
  loop:
    - "{{ remote_directory }}/font_archives"
    - "{{ remote_directory }}/fonts"
    - "{{ ansible_user_dir }}/.local/share/fonts"

- name: Include custom fonts directory
  file:
    state:  link
    src:    "{{ remote_directory }}/fonts/"
    dest:   "{{ ansible_user_dir }}/.local/share/fonts/globalrc_fonts"

# TODO : Mention it in README ?
# These fonts are required by :
# - vim-airline
# - vim-devicons
# - vim-nerdtree-syntax-highlight
- name: Download/extract extra fonts
  include_tasks: font.yml
  loop_control:
    loop_var: font_url
  loop:
    - https://github.com/ryanoasis/nerd-fonts/releases/download/v2.0.0/UbuntuMono.zip

### Alacritty ###

# TODO: It would seem there now are Debian and fedora packages for alacritty. Test and switch.

- name: Create alacritty directory
  file:
    state:  directory
    dest: '{{ remote_directory }}/alacritty'
  when: ansible_os_family == "Debian" or ansible_os_family == "RedHat"

- name: Download alacritty archive
  get_url:
    url:  "https://github.com/jwilm/alacritty/releases/download/binaries/Alacritty-x86_64.tar.gz"
    dest: "{{ remote_directory }}/alacritty/archive.tar.gz"
  when: ansible_os_family == "Debian" or ansible_os_family == "RedHat"

- name: Extract alacritty archive
  unarchive:
    src:  "{{ remote_directory }}/alacritty/archive.tar.gz"
    dest: "{{ remote_directory }}/alacritty/"
    remote_src: yes
  when: ansible_os_family == "Debian" or ansible_os_family == "RedHat"

- name: Copy alacritty executable to /usr/local/bin
  copy:
    src:  "{{ remote_directory }}/alacritty/alacritty"
    dest: "/usr/local/bin/alacritty"
    owner: root
    group: root
    mode:  0755
  become: true
  when: have_root and ( ansible_os_family == "Debian" or ansible_os_family == "RedHat" )

- name: Load alacritty config via .config/alacritty.yml
  file:
    state:  link
    follow: false
    src:    "{{ remote_directory }}/files/alacritty.yml"
    dest:   "{{ ansible_user_dir }}/.config/alacritty.yml"

- name: Install alacritty (Archlinux)
  pacman:
    name:
      - alacritty
  become: true
  when: have_root and ansible_os_family == "Archlinux"

- name: Install xclip (Debian)
  apt:
    cache_valid_time: 86400 # 1 day
    name:
      - xclip
  become: true
  when: have_root and ansible_os_family == "Debian"

- name: Install xclip (RedHat)
  dnf:
    name:
      - xclip
  become: true
  when: have_root and ansible_os_family == "RedHat"

- name: Install xclip (Archlinux)
  pacman:
    name:
      - xclip
  become: true
  when: have_root and ansible_os_family == "Archlinux"

### Graphical environment Themes ###

# See : https://www.reddit.com/r/archlinux/comments/2eo3qq/is_it_possible_to_get_qt_to_properly_use_gtk/
# See : https://wiki.archlinux.org/index.php/Uniform_look_for_Qt_and_GTK_applications#Using_a_GTK.2B_icon_theme_in_Qt_apps
# The solution chosen here for consistent look between Qt and GTK applications is to use a same theme implemented
# in both native formats

- name: Load GTK2 configuration via .gtkrc-2.0
  blockinfile:
    dest:   "{{ ansible_user_dir }}/.gtkrc-2.0"
    create: true
    block:  |
      # Load GTK2 configuration
      include "{{ remote_directory }}/files/gtkrc-2.0"

# /!\ This is a destructive operation /!\
# It does not seem possible to make an include in gtk3 config
# https://superuser.com/q/1370777/733026
- name: Load GTK3 configuration via .config/gtk-3.0/settings.ini
  file:
    dest:   "{{ ansible_user_dir }}/.config/gtk-3.0/settings.ini"
    src:    "{{ remote_directory }}/files/gtk-3.0-settings.ini"
    state:  link
    force:  true

# This is a Qt5-native port of GTK Adwaita theme
# TODO : check it also works for Qt4 (or add adwaita-qt4)
- name: Install adwaita-qt (Debian)
  apt:
    cache_valid_time: 86400 # 1 day
    name:
      - adwaita-qt
  become: true
  when: have_root and ansible_os_family == "Debian"

- name: Install adwaita-qt (RedHat)
  dnf:
    name:
      - adwaita-qt
  become: true
  when: have_root and ansible_os_family == "RedHat"

# TODO: adwaita-qt for Arch

# NB : Qt5 theme is loaded through QT_STYLE_OVERRIDE env variable
- name: Load Qt4 graphical configuration via .config/Trolltech.conf
  blockinfile:
    dest:   "{{ ansible_user_dir }}/.config/Trolltech.conf"
    create: true
    block:  |
      # Set Qt4 Theme
      [Qt]
      style=Adwaita-Dark

- name: Load .profile
  blockinfile:
    dest:         "{{ ansible_user_dir }}/.profile"
    insertbefore: BOF
    create:       true
    block:  |
      # NB : This file must stay sh-compliant

      # Load global .profile
      . {{ remote_directory }}/files/profile

### i3 ###

- name: Install i3-related packages (Debian)
  apt:
    cache_valid_time: 86400 # 1 day
    name:
      - i3        # Tiling window manager
      - rofi      # Program launcher
      - feh       # Display desktop background image
      - arandr    # Tool to generate xrandr configurations
      - numlockx  # Automatically enable numlock
      - scrot     # Take screenshots from cli
      - dunst     # Notification daemon
      - redshift  # Adapt screen spectrum to the current day time

  become: true
  when: have_root and ansible_os_family == "Debian"

- name: Install i3-related packages (RedHat)
  dnf:
    name:
      - i3
      - rofi
      - feh
      - arandr
      - numlockx
      - scrot
      - dunst
      - redshift

      # nmtui is a terminal graphical interface to NetworkManager
      # TODO : Find the equivalent debian and arch packages (seems installed by default on Ubuntu and Manjaro)
      - NetworkManager-tui
  become: true
  when: have_root and ansible_os_family == "RedHat"

- name: Install i3-related packages (Archlinux)
  pacman:
    name:
      - i3-wm
      - rofi
      - feh
      - arandr
      - numlockx
      - scrot
      - dunst
      - redshift
  become: true
  when: have_root and ansible_os_family == "Archlinux"

- name: Create i3 config directory
  file:
    state:  directory
    dest:   "{{ ansible_user_dir }}/.config/i3"

- name: Install i3 config (by symlinking)
  file:
    state:  link
    follow: false
    src:    "{{ remote_directory }}/files/i3_config"
    dest:   "{{ ansible_user_dir }}/.config/i3/config"

  # NB : If there is anything already configured in this file, our addition probably won't
  # change anything since it will likely be after an `exec`
- name: Allow starting X and i3 with the startx command
  blockinfile:
    dest:   "{{ ansible_user_dir }}/.xinitrc"
    create: true
    block: |
      # NB : This file must stay sh-compliant

      # Load very basic env (NB : this file is automatically sourced by gdm, not by startx)
      # Maybe we should ensure this is done in the tty shell directly (the one that executes startx)
      . "{{ ansible_user_dir }}/.profile"

      # Start i3
      exec i3

  # Insert emoji into any text field with rofi
- name: Install rofimoji
  pip:
    name: git+https://github.com/fdw/rofimoji
  become: true # We make a system install to be consistent with arch
  when: have_root and ( ansible_os_family == "Debian" or ansible_os_family == "RedHat" )
  # TODO : there is an arch package, add it somewhere

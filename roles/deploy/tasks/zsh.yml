# TODO : load this file only if zsh is installed ?

- name: Create zsh_plugins directory
  file:
    path:   "{{ remote_directory }}/zsh_plugins"
    state:  directory

- name: Clone zsh plugins
  git:
    repo:     "{{ item.repo }}"
    dest:     "{{ remote_directory }}/zsh_plugins/{{ item.name }}"
    version:  "{{ item.version }}"
    depth:    1
  tags: online

  # RELEASE_BLOCKER check the plugins I use with zprezto

  with_items:
      # TODO : There are packages, see if they're updated enough, and how to use them
    - name:     zsh-autosuggestions
      # repo:     https://github.com/zsh-users/zsh-autosuggestions
      # version:  v0.7.0
      # Switch to toadjaune's fork for now : https://github.com/zsh-users/zsh-autosuggestions/pull/749
      repo:     https://github.com/toadjaune/zsh-autosuggestions
      version:  wrap-underscore-widgets

      # TODO : There are packages, see if they're updated enough, and how to use them
    - name:     zsh-syntax-highlighting
      repo:     https://github.com/zsh-users/zsh-syntax-highlighting
      # NB : releases are really unfrequent, and meant to be used by package managers
      version:  "1386f12" # master as of 2023-07-05

    - name:     zsh-completions
      repo:     https://github.com/zsh-users/zsh-completions
      version:  master

# Generate completions for manually-installed tools
- name: Create generated_zsh_fpath directory
  file:
    path:   "{{ remote_directory }}/generated_zsh_fpath"
    state:  directory

- include_tasks: zsh-setup-completion.yml
  with_items:

    - name: poetry
      existence_check_command: poetry --version
      completion_generation_command: poetry completions zsh

      # TODO : For some reason, the first completion call of a shell session requires a double-tab.
    - name: volta
      existence_check_command: volta --version
      completion_generation_command: volta completions zsh

- name: Retrieve atuin widget definitions
  command:
    argv:
      - atuin
      - init
      - zsh
  changed_when: false
  register: atuin_init_zsh

# RELEASE_BLOCKER see if we really want that
# Some specific tasks need to be done before loading .zshrc
# https://unix.stackexchange.com/questions/71253/what-should-shouldnt-go-in-zshenv-zshrc-zlogin-zprofile-zlogout#71258
# http://zsh.sourceforge.net/Intro/intro_3.html
# Currently, we need it only to run code before loading /etc/zsh/zshrc
- name: Setup early configuration via .zshenv
  blockinfile:
    dest:   "{{ ansible_user_dir }}/.zshenv"
    create: true
    marker: "# {mark} GLOBALRC ANSIBLE MANAGED BLOCK"
    block:  |
      # Disable compinit call in /etc/zsh/zshrc on ubuntu
      skip_global_compinit=1

- name: Setup main zshrc
  template:
    src:  "zshrc"
    dest: "{{ remote_directory }}/templates/zshrc"

- name: Setup the loading via .zshrc
  blockinfile:
    dest:   "{{ ansible_user_dir }}/.zshrc"
    create: true
    marker: "# {mark} GLOBALRC ANSIBLE MANAGED BLOCK"
    block:  |
      # Load custom configuration
      . {{ remote_directory }}/files/zshrc

# For configuration guides, see :
# https://gist.github.com/snuggs/800936
# https://wiki.archlinux.org/index.php/Tmux
#
# For the list of breaking changes and, and how to deal with them, see :
# https://github.com/tmux/tmux/blob/master/CHANGES
# https://stackoverflow.com/questions/35016458/how-to-write-if-statement-in-tmux-conf-to-set-different-options-for-different-t/40902312#40902312

set -g history-limit 30000  # More lines of scrollback history

# Propagate the $TERM variable to child shells, for color and special glyphs
# This is way cleaner than setting it from the shell startup files
set -g default-terminal "$TERM"

# Allow support for true 24-bit colors
# TODO : maybe we should only override this if $TERM contains "256color"
# tmux >= v2.2:
if-shell "tmux -V | awk '{exit !($2 >= \"2.2\")}'" \
  'set -ga terminal-overrides ",xterm-256color:Tc"'

# Enable mouse for different versions of tmux
# (If 'awk' exits with status 0, 'if-shell' evaluates to true)
# This is a if-then-else syntax, see man tmux
# tmux >= v2.1:
if-shell "tmux -V | awk '{exit !($2 >= \"2.1\")}'" \
    "set -g mouse on" \
    "set -g mode-mouse on ; set -g mouse-select-pane on ; set -g mouse-resize-pane on ; set -g mouse-select-window on"

bind-key r source-file "{{ ansible_user_dir }}/.tmux.conf" # reload tmux conf with C-b r

# TODO : This requires tmux >= v1.8, add a test
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-{{ key_rh_left  }} if-shell "$is_vim" "send-keys C-{{ key_rh_left  }}"  "select-pane -L"
bind-key -n C-{{ key_rh_down  }} if-shell "$is_vim" "send-keys C-{{ key_rh_down  }}"  "select-pane -D"
bind-key -n C-{{ key_rh_up    }} if-shell "$is_vim" "send-keys C-{{ key_rh_up    }}"  "select-pane -U"
bind-key -n C-{{ key_rh_right }} if-shell "$is_vim" "send-keys C-{{ key_rh_right }}"  "select-pane -R"
# TODO : C-\ apparently refers to vim mapleader key, this should be configured
# to the same at the ansible role scale
# bind-key -n C-m if-shell "$is_vim" "send-keys C-m" "select-pane -l"
# NB : C-m <=> Enter
bind-key -T copy-mode-vi C-{{ key_rh_left  }} select-pane -L
bind-key -T copy-mode-vi C-{{ key_rh_down  }} select-pane -D
bind-key -T copy-mode-vi C-{{ key_rh_up    }} select-pane -U
bind-key -T copy-mode-vi C-{{ key_rh_right }} select-pane -R
# bind-key -T copy-mode-vi C-m select-pane -l

### KEYBINDINGS ###

# Bit of trickery to use tmux (on a server, over ssh) inside tmux (locally)
# without bindings conflicts
# Based on http://stahlke.org/dan/tmux-nested/
bind-key -n M-F11 set-option -q status-bg colour25
bind-key -n M-F12 set-option -q status-bg colour40

{### Initial keybindings setup ###}

{# Set default (active) colors #}
set-option -qg status-bg colour40

{# Use Alt-v and Alt-j to change tab #}
bind-key -n M-v prev
bind-key -n M-j next

{# Use Alt-e as default prefix key #}
set-option -qg prefix M-e



{### Disable custom keybindings, to yield them to inner session ###}
{# Switch focus to the inner session, and cancel all specific keybindings #}
bind-key -n M-l  \
  send-keys M-F12 \; \
  set-option -q status-bg colour25 \; \
  unbind-key -n M-v \; \
  unbind-key -n M-j \; \
  set-option -q prefix C-b

{### Re-enable custom keybindings when taking focus back from inner session ###}
{#
# Switch focus back to the outer session
# We put the bindings twice; the first one in the mapping, for runtime change
# The second for initial startup sourcing
# Please note that certain commands (such as send-keys) cannot be run at
# source-time, because we miss some context (pane/window not defined)
#}
bind-key -n M-d \
{# #}
{# Change color of the inner session, not needed for initial setup (since there can't be an inner session) #}
  send-keys M-F11 \; \
{# #}
{# Change the color of the outer session #}
  set-option -q status-bg colour40 \; \
{# #}
{# Use Alt-v and Alt-j to change tab #}
  bind-key -n M-v prev \; \
  bind-key -n M-j next \; \
{# #}
{# Use Alt-e as prefix key #}
  set-option -q prefix M-e

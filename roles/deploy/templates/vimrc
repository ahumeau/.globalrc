" Nice example to get started :
" http://nvie.com/posts/how-i-boosted-my-vim/

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Load Plugins via Vundle
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+={{ remote_directory }}/vim/bundle/Vundle.vim
" Start Vundle with a path for installing plugins
call vundle#begin('{{ remote_directory }}/vim/bundle')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

"""""""""""""""
" Plugin list "
"""""""""""""""
" See https://github.com/VundleVim/Vundle.vim for supported syntaxes

" Nice examples here :
" http://vim.wikia.com/wiki/Use_Vim_like_an_IDE
" https://github.com/VundleVim/Vundle.vim/wiki/Examples

" User interface
Plugin 'nvie/vim-togglemouse'   " toggle mouse access with F12
Plugin 'vim-scripts/CycleColor' " cycle through colors via F4
Plugin 'godlygeek/tabular'      " provides :Tab to align text
Plugin 'christoomey/vim-tmux-navigator'
    " Consistent set of keys to navigate between vim splits and tmux panels

" Filesystem access (Tree ...)
Plugin 'scrooloose/nerdtree'    " filesystem tree
Plugin 'kien/ctrlp.vim'         " fuzzy search through filesystem/buffers

" Git
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-git'
Plugin 'Xuyuanp/nerdtree-git-plugin'

" Ruby & Rails
Plugin 'tpope/vim-rails'
Plugin 'tpope/vim-bundler'
Plugin 'tpope/vim-endwise' " NB: This plugin also affects other languages

" Colors
Plugin 'agude/vim-eldar'
" Plugin 'https://raw.githubusercontent.com/garybernhardt/dotfiles/master/.vim/colors/grb256.vim'
Plugin 'Lokaltog/vim-distinguished'
" Plugin 'https://github.com/ryanb/dotfiles/raw/master/vim/colors/railscasts.vim'
Plugin 'tpope/vim-vividchalk'
" Plugin 'http://www.vim.org/scripts/download_script.php?src_id=817'

"""""""""""""""

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Plugin-specific configuration
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

""" nerdtree """
" start nerdtree automatically if vim is started without argument
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
" start nerdtree automatically if vim starts opening a directory
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | endif


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => General
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Hides buffers instead of closing them
" This allows you to have several files open with unsaved chages
set hidden

" Set to auto read when a file is changed from the outside
set autoread

" Use :W to save with sudo if you opened the file without enough rights
command! W :execute ':silent w !sudo tee % > /dev/null' | :edit!

" Allow use of ; instead of : to reduce the number of keystrokes on QWERTY
" keyboard
nnoremap ; :

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => VIM user interface
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" change the mapleader from \ to ,
" this command must be before anything using <leader>
let mapleader=","

set backspace=eol,start,indent  " Allow backspacing over everything in insert mode

set whichwrap+=<,>,h,l


" Don't redraw while executing macros (good performance config)
set lazyredraw

" For regular expressions turn magic on
set magic

set showmatch     " Show matching brackets when text indicator is over them
set mat=2         " How many tenths of a second to blink when matching brackets
set number        " Show line number
set mouse=a       " Enable mouse interaction

" Enable/Disable Paste Mode
set pastetoggle=<F10>
noremap <F9> :set nu!<cr>:setlocal paste!<cr>
noremap! <F9> <C-O>:set nu!<cr><C-O>:setlocal paste!<cr>

" Reload vimrc with ,r
nnoremap <leader>r :source $MYVIMRC<cr>

" Color
set background=dark
silent! colorscheme eldar

noremap <F12> :let @/ = ""<cr>

set history=1000         " remember more commands and search history
set undolevels=1000      " remember more actions in undo buffer
set title                " change the terminal's title
set visualbell           " don't beep
set noerrorbells         " don't beep

" Display whitespaces
set list
set listchars=tab:>.,trail:.,extends:#,nbsp:.

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Search settings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

set ignorecase    " Ignore case when searching
set smartcase     " ignore case if search pattern is all lowercase,
                    "    case-sensitive otherwise
set hlsearch      " Highlight search results
set incsearch     " show search matches as you type
nnoremap <silent> <leader>/ :nohlsearch<CR>
                  " clear search buffer by typing ,/

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Colors and Fonts
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Enable syntax highlighting
syntax enable

" Set utf8 as standard encoding and en_US as the standard language
set encoding=utf-8
set fileencoding=utf-8

" Use Unix as the standard file type
set ffs=unix,dos,mac


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Text, tab and indent related
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

set autoindent    " always set autoindenting on
set copyindent    " copy the previous indentation on autoindenting
set expandtab     " use spaces instead of tabs
set smarttab      " insert tabs on the start of a line according to
                    "    shiftwidth, not tabstop
set shiftwidth=2  " 1 tab == 2 spaces
set tabstop=2
set shiftround    " use multiple of shiftwidth when indenting with '<' and '>'

set smartindent
if has("autocmd")
  filetype plugin indent on " Detect indentation rules based on file extension
endif

set ai "Auto indent
set si "Smart indent
set wrap "Wrap lines



""""""""""""""""""""""""""""""
" => Status line
""""""""""""""""""""""""""""""
" Always show the status line
set laststatus=2

" Format the status line
set statusline=\ %{HasPaste()}%f%m%r%y\ %w\ \ CWD:\ %{GetCurrentDirectory()}%=b:%-2n\ \ r:%l/%L\ c:%-3v\ %P

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Helper functions
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Returns true if paste mode is enabled
function! HasPaste()
    if &paste
        return 'PASTE MODE  '
    en
    return ''
endfunction

function! GetCurrentDirectory()
  return fnamemodify(getcwd(), ":~")
endfunction

# i3 config file
#
# Nothing is done to install it, symlink it manually if you want to use it

# Dependencies :
# - dmenu


# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

# Use Win key as modifier
set $mod Mod4

# Define variables corresponding to keyboard letters
# We use keyboard to have a configuration independent from the keyboard layout
# Use `xev` to get the keycode of a key

# B on bépo, A on azerty
set $b 24
# É on bépo, Z on azerty
set $é 25
# P on bépo, E on azerty
set $p 26
# O on bépo, R on azerty
set $o 27

# D on bépo, I on azerty
set $d 24

# A on bépo, Q on azerty
set $a 38
# U on bépo, S on azerty
set $u 39
# I on bépo, D on azerty
set $i 40
# E on bépo, F on azerty
set $e 41

# C on bépo, H on azerty
set $c 43
# T on bépo, J on azerty
set $t 44
# S on bépo, K on azerty
set $s 45
# R on bépo, L on azerty
set $r 46
# N on bépo, M on azerty
set $n 47

# . on bépo, V on azerty
set $. 55

# Return
set $return 36
# Space
set $space 65
# Escape
set $escape 9

# Numbers row (even if they are not actually numbers without shift)
set $1 10
set $2 11
set $3 12
set $4 13
set $5 14
set $6 15
set $7 16
set $8 17
set $9 18
set $0 19

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindcode $mod+$return exec gnome-terminal

# kill focused window
bindcode $mod+Shift+$b kill

# start dmenu (a program launcher)
# bindcode $mod+$i exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
bindcode $mod+$i exec --no-startup-id i3-dmenu-desktop

# change focus
bindcode $mod+$t focus left
bindcode $mod+$s focus down
bindcode $mod+$r focus up
bindcode $mod+$n focus right

# move focused window
bindcode $mod+Shift+$t move left
bindcode $mod+Shift+$s move down
bindcode $mod+Shift+$r move up
bindcode $mod+Shift+$n move right

# split in horizontal orientation
bindcode $mod+$c split h

# split in vertical orientation
bindcode $mod+$. split v

# enter fullscreen mode for the focused container
bindcode $mod+$e fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindcode $mod+$u layout stacking
bindcode $mod+$é layout tabbed
bindcode $mod+$p layout toggle split

# toggle tiling / floating
bindcode $mod+Shift+$space floating toggle

# change focus between tiling / floating windows
bindcode $mod+$space focus mode_toggle

# focus the parent container
bindcode $mod+$a focus parent

# focus the child container
bindcode $mod+$d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindcode $mod+$1 workspace $ws1
bindcode $mod+$2 workspace $ws2
bindcode $mod+$3 workspace $ws3
bindcode $mod+$4 workspace $ws4
bindcode $mod+$5 workspace $ws5
bindcode $mod+$6 workspace $ws6
bindcode $mod+$7 workspace $ws7
bindcode $mod+$8 workspace $ws8
bindcode $mod+$9 workspace $ws9
bindcode $mod+$0 workspace $ws10

# move focused container to workspace
bindcode $mod+Shift+$1 move container to workspace $ws1
bindcode $mod+Shift+$2 move container to workspace $ws2
bindcode $mod+Shift+$3 move container to workspace $ws3
bindcode $mod+Shift+$4 move container to workspace $ws4
bindcode $mod+Shift+$5 move container to workspace $ws5
bindcode $mod+Shift+$6 move container to workspace $ws6
bindcode $mod+Shift+$7 move container to workspace $ws7
bindcode $mod+Shift+$8 move container to workspace $ws8
bindcode $mod+Shift+$9 move container to workspace $ws9
bindcode $mod+Shift+$0 move container to workspace $ws10

# reload the configuration file -> since restart preserves current layout, not really needed
# bindsym $mod+Shift+X reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindcode $mod+Shift+$o restart
# exit i3 (logs you out of your X session)
bindcode $mod+Shift+$p exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindcode $t resize shrink width 10 px or 10 ppt
        bindcode $s resize grow height 10 px or 10 ppt
        bindcode $r resize shrink height 10 px or 10 ppt
        bindcode $n resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindcode $return mode "default"
        bindcode $escape mode "default"
        bindcode $mod+$o mode "default"
}

bindcode $mod+$o mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3status
}
